-- isama219: Arbetat enskilt

with Ada.Text_Io;         use Ada.Text_Io;
with Ada.Float_Text_Io;   use Ada.Float_Text_Io;


procedure Ada_O3_1 is
   
   type Data2_Sub is 
      record
	 S : Float;
	 Z : String(1..4);
      end record;
   
   type Data3_Sub1 is
      record
	 Y : Character;
	 Q : Character;
      end record;
   
   type Data3_Sub2 is
      record
	 T : Boolean;
	 L : Character;
      end record;
   
   type Data1 is 
      record
	 W : Character;
	 P : String(1..4);
      end record;
   
   type Data2 is 
      record
	 
	 D : Data2_Sub;
	 U : Data2_Sub;
	 
      end record;
   
   type Data3 is
      record
	 
	 J : Data3_Sub1;
	 B : Data3_Sub1;
	 O : Data3_Sub2;
	 
      end record;
   
   procedure Get_Boolean (B : out Boolean) is
      
      C : Character;
      
   begin
      
      Get(C);
      if C = 'T' then
	 B := True;
      else
	 B := False;
      end if;
      
   end Get_Boolean;
   
   procedure Put_Boolean (B : in Boolean) is
   begin
      
      if B = True then
	 Put("True");
      else
	 Put("False");
      end if;
      
   end Put_Boolean;
   
   procedure Get_Data2_Sub (Sub_Data : out Data2_Sub) is
      
      L : Character;
      F : Float;
      S : String(1..4);
      
   begin
      
      Get(F);
      Get(L);
      Get(S);
      Sub_Data := (F, S);
      
   end Get_Data2_Sub;
   
   procedure Put_Data2_Sub (Sub_Data : in Data2_Sub) is
   begin
      
      Put(Sub_Data.S, Fore => 1, Aft => 3, Exp => 0);
      Put(' ');
      Put(Sub_Data.Z);
      
   end Put_Data2_Sub;
   
   procedure Get_Data3_Sub1 (Sub_Data : out Data3_Sub1) is
      
      C1, C2, L : Character;
      
   begin
      
      Get(C1);
      Get(L);
      Get(C2);
      Sub_Data := (C1, C2);
      
   end Get_Data3_Sub1;
   
   procedure Put_Data3_Sub1 (Sub_Data : in Data3_Sub1) is
   begin
      
      Put(Sub_Data.Y);
      Put(' ');
      Put(Sub_Data.Q);
      
   end Put_Data3_Sub1;
   
   procedure Get_Data3_Sub2 (Sub_Data : out Data3_Sub2) is
      
      B : Boolean;
      C, L : Character;
      
   begin
      
      Get_Boolean(B);
      Get(L);
      Get(C);
      Sub_Data := (B, C);
      
   end Get_Data3_Sub2;
   
   procedure Put_Data3_Sub2 (Sub_Data : in Data3_Sub2) is
   begin
      
      Put_Boolean(Sub_Data.T);
      Put(' ');
      Put(Sub_Data.L);
      
   end Put_Data3_Sub2;
   
   procedure Get_Data1 (Data : out Data1) is
      
      C, L : Character;
      S : String(1..4);
      
   begin
      
      Get(C);
      Get(L);
      Get(S);
      
      Data := (C, S);
      
   end Get_Data1;
   
   procedure Put_Data1 (Data : in Data1) is
   begin
      
      Put_Line(Data.W & ' ' & Data.P);
      New_Line;
      
   end Put_Data1;
   
   procedure Get_Data2 (Data : out Data2) is
      
      Sub1, Sub2 : Data2_Sub;
      
   begin
      
      Get_Data2_Sub(Sub1);
      Get_Data2_Sub(Sub2);
      
      Data := (Sub1, Sub2);
      
   end Get_Data2;
   
   procedure Put_Data2 (Data : in Data2) is
   begin
      
      Put_Data2_Sub(Data.D);
      Put(' ');
      Put_Data2_Sub(Data.U);
      New_Line(2);
      
   end Put_Data2;
   
   procedure Get_Data3 (Data : out Data3) is
      
      L : Character;
      Sub1, Sub2 : Data3_Sub1;
      Sub3 : Data3_Sub2;
      
   begin
      
      Get_Data3_Sub1(Sub1);
      Get(L);
      Get_Data3_Sub1(Sub2);
      Get(L);
      Get_Data3_Sub2(Sub3);
      
      Data := (Sub1, Sub2, Sub3);
      
   end Get_Data3;
   
   procedure Put_Data3 (Data : in Data3) is
   begin
      
      Put_Data3_Sub1(Data.J);
      Put(' ');
      Put_Data3_Sub1(Data.B);
      Put(' ');
      Put_Data3_Sub2(Data.O);
      
   end Put_Data3;
   
   
   Ds1 : Data1;
   Ds2 : Data2;
   Ds3 : Data3;
   
   
begin
   
   Put_Line("För DS1:");
   Put("Mata in datamängd: ");
   Get_Data1(Ds1);
   Skip_Line;
   Put("Inmatad datamängd: ");
   Put_Data1(Ds1);
   
   Put_Line("För DS2:");
   Put("Mata in datamängd: ");
   Get_Data2(Ds2);
   Skip_Line;
   Put("Inmatad datamängd: ");
   Put_Data2(Ds2);
   
   Put_Line("För DS3:");
   Put("Mata in datamängd: ");
   Get_Data3(Ds3);
   Skip_Line;
   Put("Inmatad datamängd: ");
   Put_Data3(Ds3);
   
end Ada_O3_1;
